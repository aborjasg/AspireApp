
using AspireApp.Libraries.Models;
using AspireApp.ServiceDefaults.Shared;
using static alglib;

namespace AspireApp.Libraries
{
    public static class FakeData
    {
        public static double[,] GetNcpData()
        {
            var result = new double[Constants.NUM_COLS, Constants.NUM_ROWS];
            var random = new Random();

            for (int k = 0; k < 100; k++)
                result[random.Next(0, Constants.NUM_COLS), random.Next(0, Constants.NUM_ROWS)] = 1;

            return result;
        }

        public static double[,] GetLineChartData()
        {
            int n = 21; // # points
            double[] arrX = new double[n];
            for (int i = 0; i < n; i++)
                arrX[i] = (-n/2) + i;

            Func<double, double> Func0 = x => Math.Exp(x);
            var arrY0 = CalculateY(Func0, arrX);

            Func<double, double> Func1 = x => Math.Sin(x);
            var arrY1 = CalculateY(Func1, arrX);

            Func<double, double> Func2 = x => Math.Cos(x);
            var arrY2 = CalculateY(Func2, arrX);

            Func<double, double> Func3 = x => Math.Tan(x);
            var arrY3 = CalculateY(Func3, arrX);

            Func<double, double> Func4 = x => Math.Sqrt(x);
            var arrY4 = CalculateY(Func4, arrX);

            Func<double, double> Func5 = x => Math.Pow(x, 2);
            var arrY5 = CalculateY(Func5, arrX);

            var arrData = Array.CreateInstance(typeof(double), new int[] { 7, n });
            arrData.SetValue(arrX, new int?[] { 0, null });
            arrData.SetValue(arrY0, new int?[] { 1, null });
            arrData.SetValue(arrY1, new int?[] { 2, null });
            arrData.SetValue(arrY2, new int?[] { 3, null });
            arrData.SetValue(arrY3, new int?[] { 4, null });
            arrData.SetValue(arrY4, new int?[] { 5, null });
            arrData.SetValue(arrY5, new int?[] { 6, null });

            return (double[,])arrData;
        }

        public static double[,] GetHistogramData()
        {
            int n = 20;
            var arrX = new int[n];
            var arrY = new int[n];
            var random = new Random();

            var list = new List<int>();
            for (int i = 0; i < n; i++)
            {
                arrX[i] = i;
                arrY[i] = random.Next(0, 100);
            }
            
            var arrData = Array.CreateInstance(typeof(double), new int[] { 2, n });
            arrData.SetValue(arrX, new int?[] { 0, null });
            arrData.SetValue(arrY, new int?[] { 1, null });
            return (double[,])arrData;
        }

        public static double[,] GetHeatMapData()
        {
            var result = new double[Constants.NUM_COLS, Constants.NUM_ROWS];
            var random = new Random();

            for (int j = 0; j < result.GetLength(0); j++)
                for (int i = 0; i < result.GetLength(1); i++)                
                    result[j, i] = (double)(random.Next(55, 95))/100d;
        
            return result;
        }


        public static double[,] GetEnergyCal_XrayRaw()
        {
            Array result = new double[,,,] { { { { 19899.984388736004, 20401.072964444065, 20464.62527830333, 21845.96800228376, 24234.25552665023, 14618.899857384475 }, { 21610.114755779876, 21819.716520885893, 21585.48749695419, 22823.867044466424, 25068.88843709389, 15821.267815593585 }, { 23110.450458722724, 23042.944307681657, 22532.637565455036, 23630.93503707526, 25747.146326037728, 16689.19275282603 }, { 24414.556131571782, 24084.95199954373, 23321.214764768, 24283.489326231225, 26285.105713161243, 17270.18138837528 }, { 25535.996408334297, 24959.935271184502, 23966.358375855223, 24797.847258055273, 26698.84311814395, 17611.740441534803 }, { 26488.335923017486, 25682.089797316352, 24483.207679678846, 25190.32617866835, 27004.435060665353, 17761.37663159806 }, { 27285.13930962859, 26265.61125265165, 24886.90195720102, 25477.243434191423, 27217.958060404966, 17766.596677858524 }, { 27939.971202174835, 26724.69531190279, 25192.580489383872, 25674.916370745428, 27355.4886370423, 17674.907299609666 }, { 28466.396234663316, 27073.537649782003, 25415.38255718942, 25799.6623344512, 27433.103310256716, 17533.815216144852 }, { 28874.443751074847, 27274.40141253857, 25562.203739536624, 25897.810113518964, 27503.399137140106, 17265.60799721927 }, { 29129.822572669273, 27471.959401157994, 25702.819784858264, 25973.77433063856, 27558.552043916847, 17845.3301477754 }, { 29372.24173331599, 27608.541684583055, 25805.303695820305, 26012.151652619985, 27587.351364522285, 17830.41606108809 }, { 29554.053556071405, 27705.53859219113, 25879.116360652322, 26021.343359419665, 27595.45446336416, 18057.52536621365 }, { 29688.02219140566, 27766.29361598427, 25930.774391554743, 26012.91516884519, 27568.586776888984, 18168.891873781587 }, { 29785.12765164531, 27794.74045049293, 25965.766114120957, 25970.34955137013, 27565.671350045734, 18643.48476020516 }, { 29879.323128081494, 27749.116862314968, 25943.08432232529, 25931.23277505434, 27561.612092936455, 18789.50843509909 }, { 29902.97637168888, 27734.536338292488, 25964.791720416113, 25879.256374698874, 27543.433124784868, 18864.008442265706 }, { 29863.417956656198, 27762.325450062934, 25999.210218151464, 25818.430068225996, 27520.658962561498, 18895.259420507875 }, { 29843.585182318395, 27759.197275254995, 26017.15084279313, 25752.82489823402, 27493.084293658845, 19061.581831928583 }, { 29818.445290104202, 27734.725758943794, 26024.035983545335, 25691.27817552447, 27462.913595774437, 19298.54646112822 }, { 29777.76922442939, 27692.33425065919, 26021.187571665967, 25619.135176585132, 27422.55575980379, 20022.526487788004 }, { 29736.264885047443, 27638.12371359349, 26006.867328144584, 25868.05220158226, 27743.618166637865, 19311.26076066382 }, { 29695.32771829478, 27563.483660130583, 25979.320942265673, 26027.16006621934, 27631.792960239512, 18877.642504443207 }, { 29824.38482183795, 27558.518783682932, 26318.528854560704, 25357.46567552447, 27196.76752235969, 18577.300417096572 }, { 29812.41059296511, 27705.013455308886, 26113.97856825466, 24833.439356151695, 26830.665785173587, 18099.220211988217 }, { 29886.78918701969, 27276.034521557027, 25768.29549901088, 24416.5391726865, 26522.145335253856, 18112.931870628283 }, { 29391.58138401545, 26954.3151337288, 25464.808131951486, 24091.407109993, 26261.650075965932, 18157.642837690542 }, { 29001.783141984724, 26696.157117159597, 25196.930550180477, 23851.72320046428, 26048.847738217966, 17963.80795278629 }, { 28662.56923661263, 26491.500286664246, 24963.355148492024, 23688.5393267686, 25871.20439886468, 18311.895227754754 }, { 28381.185733430666, 26336.82403107429, 24762.99864013576, 23597.937356667695, 25720.804512813775, 18341.84533023727 }, { 28161.17665333663, 26218.821483344673, 24592.27877751966, 23553.52256406937, 25634.592284428265, 18636.525373380256 }, { 28000.544271729024, 26130.16401860439, 24440.81056322371, 23579.777648778694, 25570.825299564145, 18897.62726106515 }, { 27835.912760864445, 26145.16767357515, 24383.078058708743, 23639.395546668842, 25514.76523979462, 19073.17078746694 }, { 27713.042788240895, 26194.11106094472, 24337.46376024813, 23735.27713994943, 25476.975644278056, 19207.244585626555 }, { 27682.176947167623, 26215.59166809986, 24291.587364550964, 23861.90885147907, 25454.715449776275, 19422.532156575988 }, { 27684.612264935084, 26230.516565617345, 24261.84059848343, 24018.214328201928, 25448.23224472525, 19536.1076460554 }, { 27715.501060658047, 26235.626587403844, 24246.26175323919, 24188.8476020524, 25455.58643289174, 19804.573059998755 }, { 27781.18228270827, 26222.047450120273, 24242.124156131635, 24385.804061317394, 25477.13365368065, 18622.6447260921 }, { 27882.67290878326, 26179.25294189301, 24253.522098239762, 23999.923012699113, 24812.514738131973, 18289.909424807847 }, { 28019.96553219227, 26099.10038986342, 24268.003954176584, 23012.166337002527, 24089.215636108132, 18089.39145453494 }, { 27863.69062822484, 25824.07598039203, 23574.794862974315, 22518.511022245046, 23576.239235752666, 17758.064667899234 }, { 27573.08428649224, 25000.501293572863, 23020.377440230368, 22010.68042655648, 23057.709888487447, 17339.458089668533 }, { 26776.526272789688, 24505.895808250083, 22574.20349945523, 21498.88425209255, 22540.446827341937, 17045.630772703735 }, { 26288.524972050098, 23985.66569200768, 22117.90100762516, 20980.502701811616, 22021.746223196777, 16662.27444888766 }, { 25773.911650040005, 23456.70503310962, 21657.28580079682, 20459.25249756325, 21502.550990425305, 16321.493876132245 }, { 25249.279089267166, 22925.94117647048, 21198.039875014234, 19946.134209092896, 20979.090729274063, 15935.212031303672 }, { 24716.31960210973, 22387.595856983033, 20737.345620484935, 19424.150871459602, 20484.353070175337, 15757.860168701909 }, { 24196.79946752081, 21816.46704434687, 20252.081505847855, 18919.357728471412, 19999.815051312824, 15407.776634703514 }, { 23647.400563295378, 21285.193129371528, 19810.072282421643, 18417.050839926527, 19515.831333849233, 15122.506016368463 }, { 23073.66408310389, 20796.96604102157, 19387.41657350065, 17922.403265107125, 19038.05347365545, 14618.647370570965 }, { 22535.714998279906, 20305.583677330487, 18965.27937234826, 17438.572010090502, 18567.138329893267, 14292.25924492597 }, { 22004.89448242737, 19809.922227955416, 18542.186657923314, 16962.894976923435, 18099.006811862084, 14119.809361025042 }, { 21470.70736942427, 19312.74543486976, 18116.090618191633, 16485.60059052853, 17626.714894364093, 14062.586328975965 }, { 20948.260219584805, 18814.601801685494, 17687.83536148369, 16167.647771901078, 17316.46509144585, 13385.379049134208 }, { 20437.605270324406, 18313.99532378732, 17256.62835038978, 15784.49677144242, 16824.320465686193, 13016.529150183402 }, { 20049.39566850122, 17813.872516769778, 17024.696135764163, 15018.03853127501, 16189.785134302181, 12561.623874842271 }, { 19565.75639978204, 17425.433630030875, 16507.73836859297, 14366.76528637764, 15608.906737329356, 12050.54787295029 }, { 19027.492113146334, 16789.969656576, 15936.622778351028, 13799.13652390774, 15069.835271901085, 11603.758979761438 }, { 18298.249763501804, 16230.25446121423, 15386.317828373967, 13305.429835311254, 14572.770482169404, 11269.878264390498 }, { 17641.197386337488, 15712.381786778964, 14852.959558823457, 12877.513670307242, 14112.911882954868, 10893.869316878745 }, { 17026.05989135412, 15238.125472996142, 14344.259438424422, 12515.045880632893, 13694.971602310448, 10583.04103242169 }, { 16455.130693871037, 14800.098092965183, 13861.495313037429, 12213.341854431774, 13313.735648864744, 10390.03638129223 }, { 15928.069476694109, 14390.861483774726, 13403.464030787689, 11952.648778809711, 12989.623853342444, 10273.503092391878 }, { 15444.942036463633, 14007.080524022407, 12972.097003640572, 11747.556383298876, 12698.669157063347, 9873.85468266249 }, { 14984.709110910371, 13710.893479102102, 12628.183110451722, 11584.848100131809, 12446.562012670503, 9789.164591933217 }, { 14569.06853428499, 13448.245287954298, 12314.521399495412, 11456.963880288902, 12227.905013759831, 9610.467596175851 }, { 14234.112505016557, 13185.379425381198, 12030.752554896168, 11361.844219412855, 12046.509986670048, 9689.581369682328 }, { 13939.400652878043, 12937.539079520635, 11785.978367589669, 11290.802248165292, 11895.889687965771, 9809.91579950689 }, { 13687.156837661898, 12702.293558651469, 11584.344065330755, 11234.327746961302, 11771.518192437736, 9801.801596003852 }, { 13492.699944817043, 12479.147470903505, 11428.318007539217, 11197.617213478903, 11677.202972709494, 9221.287330867975 }, { 13352.462461300245, 12262.103471505501, 11320.207964252897, 10883.303527405062, 11298.37408267395, 9153.380726120813 }, { 13263.359699289009, 12043.564757481881, 11253.744198629689, 10321.38724056869, 10895.893450435678, 8800.949629486255 }, { 13010.898932891807, 11813.49987458428, 10846.731173317226, 10031.100103199124, 10621.270912165985, 8511.099891784157 }, { 12698.850540362282, 11350.508255933897, 10542.948077915322, 9754.043952814998, 10361.029619596326, 8381.241844398537 }, { 12274.651380288897, 11052.070981682093, 10299.228564671432, 9487.002551312877, 10108.355650154748, 8306.305308307494 }, { 11978.772753984576, 10761.016182203824, 10063.955753353925, 9227.293759316546, 9861.591496101317, 8036.687044920268 }, { 11696.152057533482, 10486.798245613985, 9842.216449518355, 8978.463321293386, 9625.018034772342, 7907.447888000192 }, { 11423.618714883558, 10222.098970874851, 9627.923105865106, 8738.202266798491, 9386.975945275726, 7760.582426757214 }, { 11158.742776057738, 9963.035417383278, 9417.627855893774, 8496.968929165192, 9163.018597351176, 7541.0895718667225 }, { 10915.250164831963, 9700.530415089965, 9202.82449690398, 8268.966119854334, 8947.398914975303, 7215.46116772729 }, { 10674.635685414463, 9468.000343997202, 9017.047905200048, 8049.827754127928, 8738.161872204979, 7230.608728213472 }, { 10418.747262355182, 9252.517991772687, 8834.701435471807, 7827.8241349902155, 8523.873985924738, 7028.001902734744 }, { 10182.133904512048, 9035.586350475818, 8651.730908152693, 7610.429885477545, 8311.558078202, 6885.866389318852 }, { 9949.35274767797, 8817.116758399223, 8467.116364235711, 7394.7492546725925, 8097.275677961204, 6779.180161392009 }, { 9715.572999082626, 8595.922769034472, 8279.020184755149, 7176.947243005354, 7878.009162509995, 6762.017379027601 }, { 9481.842266511821, 8371.321461844931, 8084.188424492564, 7017.329689112453, 7709.928099200169, 6350.32669705306 }, { 9257.811822755373, 8145.45201955047, 7889.56762054233, 6819.973956541648, 7484.8125680827525, 6052.8056379715335 }, { 9081.751583820618, 7920.994883040897, 7769.106814728778, 6481.079033367701, 7204.851832143641, 5790.280791336974 }, { 8869.386774739092, 7717.129995126667, 7551.784299392235, 6197.119574876704, 6946.725887942863, 5599.363669590616 }, { 8635.175254056257, 7453.693745699998, 7310.385785747011, 5947.909783138373, 6698.589218911216, 5512.638616557707 }, { 8328.495875616289, 7212.387466316901, 7060.914627766277, 5728.476052774884, 6459.099769951808, 5184.568523535119 }, { 8051.424490812367, 6989.453309540156, 6813.079087117269, 5543.830162108677, 6239.885798288584, 5085.936292426303 }, { 7776.537316534763, 6775.385337833931, 6561.9169031647425, 5383.506363949063, 6030.380091875902, 5223.515225461504 }, { 7487.884341824575, 6553.889892214198, 6286.444559707415, 5222.774571615929, 5817.6841927590995, 5182.561476966519 }, { 7208.915653785884, 6345.142224945537, 6020.426898494537, 5086.864119295382, 5623.002439036047, 5078.747137835399 }, { 6946.4430048518, 6152.993786549711, 5772.02563287133, 4978.5815813959625, 5450.520188935713, 4882.671446496485 }, { 6707.27814745538, 5981.296027548449, 5549.402476182972, 4900.73353232619, 5304.422800687043, 4564.933641378093 }, { 6498.232834029693, 5833.900398463483, 5360.719141774647, 4856.126546494575, 5188.895632518971, 4096.132960908535 }, { 6326.118817007802, 5714.658349816538, 5214.137342991538, 4847.567198309639, 5108.12404266044, 3446.8686435161294 }, { 6197.74784882277, 5627.421332129346, 5117.818793178825, 4877.862062179893, 5066.293389340389, 2587.7399276291876 }, { 6119.93168190766, 5576.040795923635, 5079.925205681693, 4949.817712513857, 5067.589030787756, 1489.3460516760256 } } } };
            return (double[,])result.Squeeze().MoveAxis(0, 1);
        }

        /// <summary>
        /// 
        /// </summary>
        public static void Spline1dBuildLinear()
        {
            double[] x = new double[] { 0, 1, 2, 3 };
            double[] y = new double[] { 1, 5, 3, 9 };
            double[] y2 = new double[] { 1, 5, 3, 9, 0 };
            alglib.spline1dinterpolant s;

            alglib.spline1dbuildlinear(x, y, 4, out s);  // 'expert' interface is used
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="a"></param>
        /// <param name="b"></param>
        /// <returns></returns>
        public static double[] LeastSquares(double[,] a, double[] b)
        {
            var result = new double[0];
            alglib.lsfitreport rep;

            alglib.lsfitlinear(b, a, 11, 1, out result, out rep);
            return result;
        }
               
        /// <summary>
        /// 
        /// </summary>
        /// <param name="function"></param>
        /// <param name="x"></param>
        /// <returns></returns>
        public static double[] CalculateY (Func<double, double> function, double[] x )
        {
            double[] y = new double[x.Length];
            for (int i = 0; i < y.Length; i++)
                y[i] = function(x[i]);
            return y;
        }
    }
}
